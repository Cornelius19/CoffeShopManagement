// <auto-generated />
using System;
using CoffeBarManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeBarManagement.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_Name");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__D5B1EDCC2DD42660");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("userId");

                    b.HasKey("ClientId")
                        .HasName("PK__Clients__BF554B6C5A23BC5C");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.ComplexProductsComponent", b =>
                {
                    b.Property<int>("CpcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cpc_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CpcId"));

                    b.Property<int?>("ComponentProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("component_product_Id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("TargetProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("target_product_Id")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("CpcId")
                        .HasName("PK__Complex___D46EB7C77E81ECBD");

                    b.HasIndex("ComponentProductId");

                    b.HasIndex("TargetProductId");

                    b.ToTable("Complex_Products_Components", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<double?>("Salary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("salary")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("userId");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__C51D782093358CF9");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_Id");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_Id");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("OrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("order_status");

                    b.Property<int?>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("table_Id");

                    b.Property<double?>("Tips")
                        .HasColumnType("float")
                        .HasColumnName("tips");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__46466601090D5964");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TableId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_products_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderProductsId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_Id");

                    b.Property<int?>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_Id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unit_Price");

                    b.HasKey("OrderProductsId")
                        .HasName("PK__Order_pr__52A0DDD84F3BB8DA");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order_products", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("organization_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Logo_Path");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("OpenStatus")
                        .HasColumnType("bit")
                        .HasColumnName("openStatus");

                    b.HasKey("OrganizationId")
                        .HasName("PK__Organiza__C0B1F83A544DBE32");

                    b.ToTable("Organization", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool?>("AvailableForUser")
                        .HasColumnType("bit")
                        .HasColumnName("availableForUser");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_Id");

                    b.Property<bool?>("ComplexProduct")
                        .HasColumnType("bit")
                        .HasColumnName("complex_product");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("SupplyCheck")
                        .HasColumnType("int")
                        .HasColumnName("supplyCheck");

                    b.Property<string>("UnitMeasure")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unit_measure");

                    b.Property<double?>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("unit_price")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__4701761D066B359B");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.RemoveCategory", b =>
                {
                    b.Property<int>("RemoveCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("remove_category_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RemoveCategoryId"));

                    b.Property<string>("RemoveCategoryName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("remove_category_Name");

                    b.HasKey("RemoveCategoryId")
                        .HasName("PK__Remove_C__8C29EF03C8C77766");

                    b.ToTable("Remove_Category", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reservation_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_Id");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestNumber")
                        .HasColumnType("int")
                        .HasColumnName("guest_Number");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("reservation_Date");

                    b.Property<bool?>("ReservationStatus")
                        .HasColumnType("bit")
                        .HasColumnName("reservation_Status");

                    b.Property<int?>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("table_Id");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__314553E1ABA9FA9A");

                    b.HasIndex("ClientId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.StockBalance", b =>
                {
                    b.Property<int>("StockBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stock_balance_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockBalanceId"));

                    b.Property<DateTime?>("BalanceDate")
                        .HasColumnType("datetime")
                        .HasColumnName("balance_date");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_Id");

                    b.Property<int?>("RemoveCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("remove_category_Id");

                    b.Property<int?>("RemoveQuantity")
                        .HasColumnType("int")
                        .HasColumnName("remove_quantity");

                    b.HasKey("StockBalanceId")
                        .HasName("PK__Stock_Ba__E6C1F7C7CF211528");

                    b.HasIndex("ProductId");

                    b.HasIndex("RemoveCategoryId");

                    b.ToTable("Stock_Balance", (string)null);
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("table_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<bool?>("TableStatus")
                        .HasColumnType("bit")
                        .HasColumnName("table_status");

                    b.HasKey("TableId")
                        .HasName("PK__Tables__B211834CED4C545A");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.ComplexProductsComponent", b =>
                {
                    b.HasOne("CoffeBarManagement.Models.Models.Product", "ComponentProduct")
                        .WithMany("ComplexProductsComponentComponentProducts")
                        .HasForeignKey("ComponentProductId")
                        .HasConstraintName("FK__Complex_P__compo__5CD6CB2B");

                    b.HasOne("CoffeBarManagement.Models.Models.Product", "TargetProduct")
                        .WithMany("ComplexProductsComponentTargetProducts")
                        .HasForeignKey("TargetProductId")
                        .HasConstraintName("FK__Complex_P__targe__5BE2A6F2");

                    b.Navigation("ComponentProduct");

                    b.Navigation("TargetProduct");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Order", b =>
                {
                    b.HasOne("CoffeBarManagement.Models.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Orders__client_I__59063A47");

                    b.HasOne("CoffeBarManagement.Models.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Orders__employee__59FA5E80");

                    b.HasOne("CoffeBarManagement.Models.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .HasConstraintName("FK__Orders__table_Id__5FB337D6");

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.OrderProduct", b =>
                {
                    b.HasOne("CoffeBarManagement.Models.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_pro__order__571DF1D5");

                    b.HasOne("CoffeBarManagement.Models.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Order_pro__produ__5629CD9C");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Product", b =>
                {
                    b.HasOne("CoffeBarManagement.Models.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__catego__5AEE82B9");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Reservation", b =>
                {
                    b.HasOne("CoffeBarManagement.Models.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Reservati__clien__5812160E");

                    b.HasOne("CoffeBarManagement.Models.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .HasConstraintName("FK__Reservati__table__60A75C0F");

                    b.Navigation("Client");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.StockBalance", b =>
                {
                    b.HasOne("CoffeBarManagement.Models.Models.Product", "Product")
                        .WithMany("StockBalances")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Stock_Bal__produ__5EBF139D");

                    b.HasOne("CoffeBarManagement.Models.Models.RemoveCategory", "RemoveCategory")
                        .WithMany("StockBalances")
                        .HasForeignKey("RemoveCategoryId")
                        .HasConstraintName("FK__Stock_Bal__remov__5DCAEF64");

                    b.Navigation("Product");

                    b.Navigation("RemoveCategory");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Client", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Product", b =>
                {
                    b.Navigation("ComplexProductsComponentComponentProducts");

                    b.Navigation("ComplexProductsComponentTargetProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("StockBalances");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.RemoveCategory", b =>
                {
                    b.Navigation("StockBalances");
                });

            modelBuilder.Entity("CoffeBarManagement.Models.Models.Table", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
